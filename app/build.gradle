//plugins {
//    id "org.openapi.generator" version "6.6.0"
//}


apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.javaelev.weather.weatherapp"
        minSdkVersion 27
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_11
        sourceCompatibility JavaVersion.VERSION_11
    }
    packagingOptions {
//        exclude("META-INF/spring.tooling")
//        exclude("META-INF/spring.handlers")
//        exclude("META-INF/spring-configuration-metadata.json")
//        exclude("META-INF/spring.factories")
//        exclude("META-INF/license.txt")
//        exclude("META-INF/web-fragment.xml")
//        exclude("META-INF/spring.provides")
//        exclude("META-INF/additional-spring-configuration-metadata.json")
//        exclude("META-INF/spring.schemas")
//        exclude("META-INF/notice.txt")
        exclude("META-INF/NOTICE.md")
        exclude("META-INF/LICENSE.md")
    }
    sourceSets {
        main.java.srcDirs += 'build/generated/source/jaxb'
    }

    namespace 'com.javaelev.weather.weatherapp'
}

//repositories {
//    mavenCentral()
//}

//
//openApiGenerate {
//    generatorName.set("java")
//    inputSpec.set("$rootDir/app/src/main/res/raw/swagger_weather_api.json")
//    outputDir.set("$buildDir/generated/ap_generated_sources/debug/out")
//    apiPackage.set("com.javaelev.weather.api")
//    invokerPackage.set("com.javaelev.weather.invoker")
//    modelPackage.set("com.javaelev.weather.model")
//    configOptions.set([
//            dateLibrary: "java8"
//    ])
//}
//
//ext {
//    spring_boot_version = '2.0.0.RELEASE'
//    jackson_version = '2.4.2'
//    jersey_version = '1.18'
//    jodatime_version = '2.3'
//    junit_version = '4.8.1'
//}


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.appcompat:appcompat-resources:1.4.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-xjc:2.3.1'
//    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.11.1'
//    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation 'com.stanfy:gson-xml-java:0.1.5'
    //    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
//    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
//    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
//    implementation project(path: ':app')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"

//    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.32'             // Swagger Codegen V2
//    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.46'  // or Swagger Codegen V3
//    swaggerCodegen 'org.openapitools:openapi-generator-cli:3.3.4'     // or OpenAPI Generator
//    implementation 'io.swagger:swagger-annotations:1.5.16'
//    implementation 'com.squareup.okhttp:okhttp:2.7.5'
//    implementation 'com.squareup.okhttp:logging-interceptor:2.7.5'
//    implementation 'com.google.code.gson:gson:2.8.1'
//
//    implementation sourceSets.swagger.output
//
//    implementation "com.sun.jersey:jersey-client:$jersey_version"
//    implementation "com.sun.jersey.contribs:jersey-multipart:$jersey_version"
//    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
//    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
//    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
//    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.1.5"
//    implementation "joda-time:joda-time:$jodatime_version"
//    implementation 'io.swagger:swagger-codegen:2.2.3'
//


}


//configurations.all {
//    resolutionStrategy {
//        // fail eagerly on version conflict (includes transitive dependencies)
//        // e.g. multiple different versions of the same dependency (group and name are equal)
//        failOnVersionConflict()
//
//        // prefer modules that are part of this build (multi-project or composite build) over external modules
//        preferProjectModules()
//
//        // force certain versions of dependencies (including transitive)
//        //  *append new forced modules:
////        force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
////        //  *replace existing forced modules with new ones:
////        forcedModules = ['asm:asm-all:3.3.1']
//
//        // add dependency substitution rules
//        dependencySubstitution {
////            substitute module('commons-logging:commons-logging:1.2') using module('org.slf4j:jcl-over-slf4j:1.7.25')
//            substitute module('org.hamcrest:hamcrest-core:1.1') using module('junit:junit:4.10')
//            substitute module('com.google.guava:guava:16.0.1') using module('com.google.guava:listenablefuture:1.0')
//        }
//
//        // cache dynamic versions for 10 minutes
//        cacheDynamicVersionsFor 10*60, 'seconds'
//        // don't cache changing modules at all
//        cacheChangingModulesFor 0, 'seconds'
//    }
//}

//task buildJavaResttemplateSdk(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
//
//    generatorName = "java"
//    library = "resttemplate"
//    inputSpec = "$rootDir/app/src/main/res/raw/swagger_weather_api.json".toString()
//    outputDir = "$buildDir/generated/ap_generated_sources/debug/out/java-resttemplate-api-client"
//    apiPackage = "com.example.client"
//    invokerPackage = "com.example.invoker"
//    modelPackage = "com.example.cdm"
//    configOptions = [
//            dateLibrary: "java8"
//    ]
//    groupId = 'com.example'
//    id = 'client'
//    skipValidateSpec = true
//    logToStderr = true
//    generateAliasAsModel = false
//    enablePostProcessFile = false
//}